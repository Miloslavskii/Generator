<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StockSharp.Logging</name>
    </assembly>
    <members>
        <member name="T:StockSharp.Logging.ConsoleLogListener">
            <summary>
            The logger that records the data to the console window.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ConsoleLogListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.ConsoleLogListener"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ConsoleLogListener.OnWriteMessage(StockSharp.Logging.LogMessage)">
            <summary>
            To record a message.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="T:StockSharp.Logging.DebugLogListener">
            <summary>
            The strategy logger that records the data to the debug window.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.DebugLogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="T:StockSharp.Logging.EmailLogListener">
            <summary>
            The logger sending data to the email.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.EmailLogListener"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.EmailLogListener.From">
            <summary>
            The address, on whose behalf the message will be sent.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.EmailLogListener.To">
            <summary>
            The address to which the message will be sent to.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.CreateClient">
            <summary>
            To create the email client.
            </summary>
            <returns>The email client.</returns>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.GetSubject(StockSharp.Logging.LogMessage)">
            <summary>
            To create a header.
            </summary>
            <param name="message">A debug message.</param>
            <returns>Header.</returns>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.EnqueueMessage(StockSharp.Logging.LogMessage)">
            <summary>
            To add a message in a queue for sending.
            </summary>
            <param name="message">Message.</param>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.OnWriteMessage(StockSharp.Logging.LogMessage)">
            <summary>
            To record a message.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.EmailLogListener.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.ErrorLoggingAttribute">
            <summary>
            The attribute for the WCF server that automatically records all errors to <see cref="M:StockSharp.Logging.LoggingHelper.LogError(System.Exception,System.String)"/>.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.ExternalLogListener">
            <summary>
            The logger sending messages to the external recipient <see cref="T:StockSharp.Logging.ILogListener"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ExternalLogListener.#ctor(StockSharp.Logging.ILogListener)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.ExternalLogListener"/>.
            </summary>
            <param name="logger">External recipient of messages.</param>
        </member>
        <member name="P:StockSharp.Logging.ExternalLogListener.Logger">
            <summary>
            External recipient of messages.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ExternalLogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="T:StockSharp.Logging.SeparateByDateModes">
            <summary>
            Modes of log files splitting by date.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.SeparateByDateModes.None">
            <summary>
            Do not split. The splitting is off.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.SeparateByDateModes.FileName">
            <summary>
            To split by adding to the file name.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.SeparateByDateModes.SubDirectories">
            <summary>
            To split via subdirectories.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.FileLogListener">
            <summary>
            The logger recording the data to a text file.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.#ctor">
            <summary>
            To create <see cref="T:StockSharp.Logging.FileLogListener"/>. For each <see cref="T:StockSharp.Logging.ILogSource"/> a separate file with a name equal to <see cref="P:StockSharp.Logging.ILogSource.Name"/> will be created.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.#ctor(System.String)">
            <summary>
            To create <see cref="T:StockSharp.Logging.FileLogListener"/>. All messages from the <see cref="E:StockSharp.Logging.ILogSource.Log"/> will be recorded to the file <paramref name="fileName" />.
            </summary>
            <param name="fileName">The name of a text file to which messages from the event <see cref="E:StockSharp.Logging.ILogSource.Log"/> will be recorded.</param>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.FileName">
            <summary>
            The name of a text file (without filename extension) to which messages from the event <see cref="E:StockSharp.Logging.ILogSource.Log"/> will be recorded.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.Encoding">
            <summary>
            File encoding. The default is UTF-8 encoding.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.MaxLength">
            <summary>
            The maximum length of the log file. The default is 0, which means that the file will have unlimited size.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.MaxCount">
            <summary>
            The maximum number of rolling files. The default is 0, which means that the files will be rolled without limitation.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.Append">
            <summary>
            Whether to add the data to a file, if it already exists. The default is off.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.LogDirectory">
            <summary>
            The directory where the log file will be created. By default, it is the directory where the executable file is located.
            </summary>
            <remarks>
            If the directory does not exist, it will be created.
            </remarks>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.WriteChildDataToRootFile">
            <summary>
            To record the subsidiary sources data to the parent file. The default mode is enabled.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.Extension">
            <summary>
            Extension of log files. The default value is 'txt'.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.WriteSourceId">
            <summary>
            To output the source identifier <see cref="P:StockSharp.Logging.ILogSource.Id"/> to a file. The default is off.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.DirectoryDateFormat">
            <summary>
            The directory name format that represents a date. By default is 'yyyy_MM_dd'.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.FileLogListener.SeparateByDates">
            <summary>
            The mode of log files splitting by date. The default mode is <see cref="F:StockSharp.Logging.SeparateByDateModes.None"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.OnCreateWriter(System.String)">
            <summary>
            To create a text writer.
            </summary>
            <param name="fileName">The name of the text file to which messages from the event <see cref="E:StockSharp.Logging.ILogSource.Log"/> will be recorded.</param>
            <returns>A text writer.</returns>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.FileLogListener.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.ILogListener">
            <summary>
            The class interface that monitors the event <see cref="E:StockSharp.Logging.ILogSource.Log"/> and saves to some storage.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ILogListener.WriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="T:StockSharp.Logging.ILogReceiver">
            <summary>
            Logs recipient interface.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.ILogReceiver.AddLog(StockSharp.Logging.LogMessage)">
            <summary>
            To record a message to the log.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="T:StockSharp.Logging.BaseLogReceiver">
            <summary>
            The base implementation <see cref="T:StockSharp.Logging.ILogReceiver"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.BaseLogReceiver.#ctor">
            <summary>
            Initialize <see cref="T:StockSharp.Logging.BaseLogReceiver"/>.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.ILogSource">
            <summary>
            Logs source interface.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.Id">
            <summary>
            The unique identifier of the source.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.Name">
            <summary>
            The source name.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.Parent">
            <summary>
            Parental logs source.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.LogLevel">
            <summary>
            The logging level for the source.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.CurrentTime">
            <summary>
            Current time, which will be passed to the <see cref="P:StockSharp.Logging.LogMessage.Time"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.ILogSource.IsRoot">
            <summary>
            Whether the source is the root (even if <see cref="P:StockSharp.Logging.ILogSource.Parent"/> is not equal to <see langword="null" />).
            </summary>
        </member>
        <member name="E:StockSharp.Logging.ILogSource.Log">
            <summary>
            New debug message event.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.BaseLogSource">
            <summary>
            The base implementation <see cref="T:StockSharp.Logging.ILogSource"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.BaseLogSource.#ctor">
            <summary>
            Initialize <see cref="T:StockSharp.Logging.BaseLogSource"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.Id">
            <summary>
            The unique identifier of the source.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.Name">
            <summary>
            Source name (to distinguish in log files).
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.LogLevel">
            <summary>
            The logging level. The default is set to <see cref="F:StockSharp.Logging.LogLevels.Inherit"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.CurrentTime">
            <summary>
            Current time, which will be passed to the <see cref="P:StockSharp.Logging.LogMessage.Time"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.BaseLogSource.IsRoot">
            <summary>
            Whether the source is the root (even if <see cref="P:StockSharp.Logging.ILogSource.Parent"/> is not equal to <see langword="null" />).
            </summary>
        </member>
        <member name="E:StockSharp.Logging.BaseLogSource.Log">
            <summary>
            New debug message event.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.BaseLogSource.RaiseLog(StockSharp.Logging.LogMessage)">
            <summary>
            To call the event <see cref="E:StockSharp.Logging.ILogSource.Log"/>.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="M:StockSharp.Logging.BaseLogSource.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:StockSharp.Logging.BaseLogSource.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.BaseLogSource.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.Log4NetLogger">
            <summary>
            Helper class for messages logging based on log4net.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.Log4NetLogger"/>.
            </summary>
            <param name="configFile">The path to the configuration file log4net.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.Info(System.String,System.String)">
            <summary>
            To send an information message.
            </summary>
            <param name="message">Message text.</param>
            <param name="source">The message source.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.Warning(System.String,System.String)">
            <summary>
            To send a warning message.
            </summary>
            <param name="message">Message text.</param>
            <param name="source">The message source.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.Error(System.String,System.String)">
            <summary>
            To send an error message.
            </summary>
            <param name="message">Message text.</param>
            <param name="source">The message source.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.Debug(System.String,System.String)">
            <summary>
            To send a debug message.
            </summary>
            <param name="message">Message text.</param>
            <param name="source">The message source.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogger.OnWriteMessage(StockSharp.Logging.LogMessage)">
            <summary>
            To record a message.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="T:StockSharp.Logging.Log4NetLogListener">
            <summary>
            Logger sending out messages to <see cref="T:StockSharp.Logging.Log4NetLogger"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.Log4NetLogListener"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogListener.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.Log4NetLogListener"/>.
            </summary>
            <param name="configFile">The path to the configuration file log4net.</param>
        </member>
        <member name="M:StockSharp.Logging.Log4NetLogListener.#ctor(StockSharp.Logging.Log4NetLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.Log4NetLogListener"/>.
            </summary>
            <param name="logger">Helper class for messages logging based on log4net.</param>
        </member>
        <member name="T:StockSharp.Logging.LoggingHelper">
            <summary>
            Extension class for <see cref="T:StockSharp.Logging.ILogSource"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddInfoLog(StockSharp.Logging.ILogReceiver,System.Func{System.String})">
            <summary>
            To record a message to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="getMessage">The function returns the text for <see cref="P:StockSharp.Logging.LogMessage.Message"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddWarningLog(StockSharp.Logging.ILogReceiver,System.Func{System.String})">
            <summary>
            To record a warning to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="getMessage">The function returns the text for <see cref="P:StockSharp.Logging.LogMessage.Message"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddErrorLog(StockSharp.Logging.ILogReceiver,System.Func{System.String})">
            <summary>
            To record an error to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="getMessage">The function returns the text for <see cref="P:StockSharp.Logging.LogMessage.Message"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddLog(StockSharp.Logging.ILogReceiver,StockSharp.Logging.LogLevels,System.Func{System.String})">
            <summary>
            To record a message to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="level">The level of the log message.</param>
            <param name="getMessage">The function returns the text for <see cref="P:StockSharp.Logging.LogMessage.Message"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddInfoLog(StockSharp.Logging.ILogReceiver,System.String,System.Object[])">
            <summary>
            To record a message to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="message">Text message.</param>
            <param name="args">Text message settings. Used if a message is the format string. For details, see <see cref="M:System.String.Format(System.String,System.Object[])"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddDebugLog(StockSharp.Logging.ILogReceiver,System.String,System.Object[])">
            <summary>
            To record a debugging to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="message">Text message.</param>
            <param name="args">Text message settings. Used if a message is the format string. For details, see <see cref="M:System.String.Format(System.String,System.Object[])"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddWarningLog(StockSharp.Logging.ILogReceiver,System.String,System.Object[])">
            <summary>
            To record a warning to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="message">Text message.</param>
            <param name="args">Text message settings. Used if a message is the format string. For details, see <see cref="M:System.String.Format(System.String,System.Object[])"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddErrorLog(StockSharp.Logging.ILogReceiver,System.Exception)">
            <summary>
            To record an error to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="exception">Error detais.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddErrorLog(StockSharp.Logging.ILogReceiver,System.Exception,System.String)">
            <summary>
            To record an error to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="exception">Error detais.</param>
            <param name="format">A format string.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.AddErrorLog(StockSharp.Logging.ILogReceiver,System.String,System.Object[])">
            <summary>
            To record an error to the log.
            </summary>
            <param name="receiver">Logs receiver.</param>
            <param name="message">Text message.</param>
            <param name="args">Text message settings. Used if a message is the format string. For details, see <see cref="M:System.String.Format(System.String,System.Object[])"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.LogError(System.Exception,System.String)">
            <summary>
            To record an error to the <see cref="P:StockSharp.Logging.LogManager.Application"/>.
            </summary>
            <param name="error">Error.</param>
            <param name="format">A format string.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.GetLogLevel(StockSharp.Logging.ILogSource)">
            <summary>
            Get <see cref="P:StockSharp.Logging.ILogSource.LogLevel"/> for the source. If the value is equal to <see cref="F:StockSharp.Logging.LogLevels.Inherit"/>, then parental source level is taken.
            </summary>
            <param name="source">The log source.</param>
            <returns>Logging level.</returns>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.DoWithLog(System.Action)">
            <summary>
            Wrap the specified action in try/catch clause with logging.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:StockSharp.Logging.LoggingHelper.DoWithLog``1(System.Func{``0})">
            <summary>
            Wrap the specified action in try/catch clause with logging.
            </summary>
            <typeparam name="T">The type of returned result.</typeparam>
            <param name="action">The action.</param>
            <returns>The resulting value.</returns>
        </member>
        <member name="T:StockSharp.Logging.LogLevels">
            <summary>
            Levels of log messages <see cref="T:StockSharp.Logging.LogMessage"/>.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Inherit">
            <summary>
            To use the logging level of the container.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Debug">
            <summary>
            Debug message, information, warnings and errors.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Info">
            <summary>
            Information, warnings and errors.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Warning">
            <summary>
            Warnings and errors.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Error">
            <summary>
            Errors only.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogLevels.Off">
            <summary>
            Logs off.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.LogListener">
            <summary>
            The base class that monitors the event <see cref="E:StockSharp.Logging.ILogSource.Log"/> and saves to some storage.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogListener.#ctor">
            <summary>
            Initialize <see cref="T:StockSharp.Logging.LogListener"/>.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogListener.AllWarningFilter">
            <summary>
            The filter that only accepts messages of <see cref="F:StockSharp.Logging.LogLevels.Warning"/> type.
            </summary>
        </member>
        <member name="F:StockSharp.Logging.LogListener.AllErrorFilter">
            <summary>
            The filter that only accepts messages of <see cref="F:StockSharp.Logging.LogLevels.Error"/> type.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogListener.Filters">
            <summary>
            Messages filters that specify which messages should be handled.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogListener.DateFormat">
            <summary>
            Date format. By default yyyy/MM/dd.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogListener.TimeFormat">
            <summary>
            Time format. By default HH:mm:ss.fff.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogListener.WriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="M:StockSharp.Logging.LogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="M:StockSharp.Logging.LogListener.OnWriteMessage(StockSharp.Logging.LogMessage)">
            <summary>
            To record a message.
            </summary>
            <param name="message">A debug message.</param>
        </member>
        <member name="M:StockSharp.Logging.LogListener.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.LogListener.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.LogManager">
            <summary>
            Messages logging manager that monitors the <see cref="E:StockSharp.Logging.ILogSource.Log"/> event and forwards messages to the <see cref="P:StockSharp.Logging.LogManager.Listeners"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.LogManager"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogManager.LocalTimeZone">
            <summary>
            Local time zone to convert all incoming messages. Not use in case of <see langword="null"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogManager.Application">
            <summary>
            The all application level logs recipient.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogManager.Listeners">
            <summary>
            Messages loggers arriving from <see cref="P:StockSharp.Logging.LogManager.Sources"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogManager.Sources">
            <summary>
            Logs sources which are listened to the event <see cref="E:StockSharp.Logging.ILogSource.Log"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogManager.FlushInterval">
            <summary>
            Sending interval of messages collected from <see cref="P:StockSharp.Logging.LogManager.Sources"/> to the <see cref="P:StockSharp.Logging.LogManager.Listeners"/>. The default is 500 ms.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogManager.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogManager.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.LogManager.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.LogMessage">
            <summary>
            A debug message.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogMessage.#ctor(StockSharp.Logging.ILogSource,System.DateTimeOffset,StockSharp.Logging.LogLevels,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.LogMessage"/>.
            </summary>
            <param name="source">The log source.</param>
            <param name="time">Message creating time.</param>
            <param name="level">The level of the log message.</param>
            <param name="message">Text message.</param>
            <param name="args">Text message settings. Used if a message is the format string. For details, see <see cref="M:System.String.Format(System.String,System.Object[])"/>.</param>
        </member>
        <member name="M:StockSharp.Logging.LogMessage.#ctor(StockSharp.Logging.ILogSource,System.DateTimeOffset,StockSharp.Logging.LogLevels,System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.LogMessage"/>.
            </summary>
            <param name="source">The log source.</param>
            <param name="time">Message creating time.</param>
            <param name="level">The level of the log message.</param>
            <param name="getMessage">The function returns the text for <see cref="P:StockSharp.Logging.LogMessage.Message"/>.</param>
        </member>
        <member name="P:StockSharp.Logging.LogMessage.Source">
            <summary>
            The log source.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogMessage.Time">
            <summary>
            Message creating time.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogMessage.Level">
            <summary>
            The level of the log message.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.LogMessage.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.LogMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:StockSharp.Logging.MemoryStatistics">
            <summary>
            The class for tracking objects taking in memory.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatistics.Instance">
            <summary>
            An object of class <see cref="T:StockSharp.Logging.MemoryStatistics"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatistics.Interval">
            <summary>
            Statistics logging interval. The default is 1 minute.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatistics.Values">
            <summary>
            Monitored objects.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.Clear(System.Boolean)">
            <summary>
            To clear memory statistics.
            </summary>
            <param name="resetCounter">Whether to clear the objects counter.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatistics.IsEnabled">
            <summary>
            Is the source on.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatistics.AddOrRemove">
            <summary>
            To add or to remove the source <see cref="T:StockSharp.Logging.MemoryStatistics"/> from the registered <see cref="T:StockSharp.Logging.LogManager"/>.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.IMemoryStatisticsValue">
            <summary>
            The interface for tracking the number of active objects of the particular type.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.IMemoryStatisticsValue.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.IMemoryStatisticsValue.ObjectCount">
            <summary>
            The number of active objects.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.IMemoryStatisticsValue.Clear(System.Boolean)">
            <summary>
            To clear active objects.
            </summary>
            <param name="resetCounter">Whether to clear the objects counter.</param>
        </member>
        <member name="T:StockSharp.Logging.MemoryStatisticsValue`1">
            <summary>
            The class for tracking the number of active objects of the particular type.
            </summary>
            <typeparam name="T">The object type.</typeparam>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.MemoryStatisticsValue`1"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.Objects">
            <summary>
            Active objects.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.ObjectCount">
            <summary>
            The number of active objects.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.ThrowOnRemoveDeleted">
            <summary>
            To check that they are going to delete a previously deleted object.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.IsTraceObjects">
            <summary>
            To log the objects creating and deletion. The default is off.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.MemoryStatisticsValue`1.IsObjectTracking">
            <summary>
            Whether the storage of objects available through <see cref="P:StockSharp.Logging.MemoryStatisticsValue`1.Objects"/> is on. The default is off.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Add(`0)">
            <summary>
            To add a new object.
            </summary>
            <param name="obj">The new object.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            To add new objects.
            </summary>
            <param name="objects">Active objects.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Remove(`0)">
            <summary>
            To delete the active object.
            </summary>
            <param name="obj">The active object.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Remove(System.Int32)">
            <summary>
            To change <see cref="P:StockSharp.Logging.MemoryStatisticsValue`1.ObjectCount"/>, reducing it by the number of deleted objects.
            </summary>
            <param name="count">The number of deleted objects.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            To delete active objects.
            </summary>
            <param name="objects">Active objects.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Clear(System.Boolean)">
            <summary>
            To clear active objects <see cref="P:StockSharp.Logging.MemoryStatisticsValue`1.ObjectCount"/>.
            </summary>
            <param name="resetCounter">Whether to clear the objects counter.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.MemoryStatisticsValue`1.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.SoundLogListener">
            <summary>
            Logger playing the music when a message received.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.SoundLogListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.SoundLogListener"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.SoundLogListener.FileName">
            <summary>
            The path to the file with the sound that will be played when a message received.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.SoundLogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="M:StockSharp.Logging.SoundLogListener.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.SoundLogListener.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.SpeechLogListener">
            <summary>
            Logger speaking words when a message received.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.SpeechLogListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.SpeechLogListener"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.SpeechLogListener.Volume">
            <summary>
            The volume level.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.SpeechLogListener.OnWriteMessages(System.Collections.Generic.IEnumerable{StockSharp.Logging.LogMessage})">
            <summary>
            To record messages.
            </summary>
            <param name="messages">Debug messages.</param>
        </member>
        <member name="M:StockSharp.Logging.SpeechLogListener.Load(Ecng.Serialization.SettingsStorage)">
            <summary>
            Load settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="M:StockSharp.Logging.SpeechLogListener.Save(Ecng.Serialization.SettingsStorage)">
            <summary>
            Save settings.
            </summary>
            <param name="storage">Settings storage.</param>
        </member>
        <member name="T:StockSharp.Logging.TraceSource">
            <summary>
            The logs source which receives information from <see cref="T:System.Diagnostics.Trace"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.TraceSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.TraceSource"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.TraceSource.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.TraceSource.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
        <member name="T:StockSharp.Logging.UnhandledExceptionSource">
            <summary>
            The logs source sending information about unhandled errors <see cref="E:System.AppDomain.UnhandledException"/> and <see cref="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException"/>.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.UnhandledExceptionSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StockSharp.Logging.UnhandledExceptionSource"/>.
            </summary>
        </member>
        <member name="P:StockSharp.Logging.UnhandledExceptionSource.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="M:StockSharp.Logging.UnhandledExceptionSource.DisposeManaged">
            <summary>
            Release resources.
            </summary>
        </member>
    </members>
</doc>
